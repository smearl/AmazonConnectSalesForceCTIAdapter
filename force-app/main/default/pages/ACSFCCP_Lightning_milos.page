<!--  You must have an AWS account to use the Amazon Connect CTI Adapter.
Downloading and/or using the Amazon Connect CTI Adapter is subject to the terms of the AWS Customer Agreement,
AWS Service Terms, and AWS Privacy Notice.

Â© 2017, Amazon Web Services, Inc. or its affiliates. All rights reserved.

NOTE:  Other license terms may apply to certain, identified software components
contained within or distributed with the Amazon Connect CTI Adapter if such terms are
included in the LibPhoneNumber-js and Salesforce Open CTI. For such identified components,
such other license terms will then apply in lieu of the terms above.

** libphonenumber-js; version 0.4.2 / 30.03.2017 -- https://github.com/catamphetamine/libphonenumber-js
Copyright (c) 2016 @catamphetamine

(The MIT License)

Copyright (c) 2016 @catamphetamine

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. -->

<apex:page id="ACSFCCP_Lightning" showHeader="false">

    <apex:slds />

    <apex:includeScript value="/support/api/40.0/lightning/opencti_min.js"/>
    <apex:includeScript value="{!$Resource.amazonconnectjs121}"/>
    <apex:includeScript value="{!$Resource.libphonenumberjs}"/>

    <apex:includeScript value="{!$Resource.acsf_screenpopmanager}" />

    <style>
        body {background-color:#F2F2F2; border:none;}
        #outercontainer {
            justify-content: center;
            text-align: center;
            vertical-align: middle;
            align-items: center;
            margin: 0 auto;
            border: none;
            padding:0;
        }
        #connectcontainer {
            width: 1px;
            height: 1px;
            justify-content: center;
            align-items: center;
            border: none;
        }

        .slds-scope .slds-table td, .slds-scope .slds-table th {
            padding: 0px;
        }

        .hidden {
            display: none;
        }


    </style>

    <body>

    <div id="outercontainer">

        <div class="slds-scope">
            <div id="ccpSoftphoneLogin" class="ccpSoftphone ccpLogin slds-align_absolute-center slds-hide" style="margin-top: 200px">
                <button id="loginButton" class="slds-button slds-button_brand">Sign in to CCP</button>
            </div>
        </div>

        <div id="connectcontainer"></div>
    </div>

    </body>

    <script type="text/javascript">
        (function(ctx) {
            var ccSettings = null;
            var connectCW = null;
            var connectCH = null;
            var connectLNCW = null;
            var connectLNCH = null;
            var connectURL = null;
            var connectSSOURL = null;
            var connectPhoneFormat = null;
            var loginWindow = null;

            var connectMedialess = false;
            var connectLoginPopup = false;
            var connectAutoClose = false;
            var connectAutoLogin = 0;

            //Set to address current iframe bug in Chrome
            setInterval(function () {
                var iframe = document.getElementById('connectcontainer').children[0];
                iframe.style.display = iframe.style.display ? '' : 'block';
            }, 750);

            //login button

            var showLoginScreen = function () {
                document.getElementById('connectcontainer').classList.add('hidden');
                document.getElementById('ccpSoftphoneLogin').classList.remove('slds-hide');
            }

            var showSoftphone = function () {
                document.getElementById('ccpSoftphoneLogin').classList.add('slds-hide');
                document.getElementById('connectcontainer').classList.remove('hidden');
            }

            var setupLoginHandler = function (ccpUrl) {
                connect.getLog().info("ConnectSFCCP:setupLoginHandler invoked");

                document.getElementById('loginButton').addEventListener('click', function () {
                    if(connectLoginPopup)
                    {
                        loginWindow = window.open(ccpUrl, 'AmazonConnectLoginWindow', 'width=400, height=520');
                    }
                    else
                    {
                        loginWindow = window.open(ccpUrl, '_blank');
                        loginWindow.focus();
                    }
                });

                showLoginScreen();
            }

            var onSoftphoneLoginSuccessful = function() {
                connect.getLog().info("ConnectSFCCP:onSoftphoneLoginSuccessful invoked");
                connectAutoLogin = 0;
                showSoftphone();

                if(loginWindow && connectAutoClose) {
                    loginWindow.close();
                    loginWindow = null;
                }
            }



            //end of login button

            var cbHeightSet = function(response) {
                if(response.success) {
                    connect.getLog().info("ConnectSFCCP:cbHeightSet:OK");
                } else {
                    connect.getLog().error("ConnectSFCCP:cbHeightSet:Error:"+ response.errors);
                }
            };

            var cbWidthSet = function(response) {
                if(response.success) {
                    connect.getLog().info("ConnectSFCCP:cbWidthSet:OK");
                } else {
                    connect.getLog().error("ConnectSFCCP:cbWidthSet:Error:"+ response.errors);
                }
            };

            var cbClickToDial = function(response) {
                if (response.success) {
                    connect.getLog().info("ConnectSFCCP:cbClickToDial:OK");
                } else {
                    connect.getLog().error("ConnectSFCCP:cbClickToDial:Error:"+ response.errors);
                }
            };

            var onClickListener = function (payload) {
                connect.agent(function(agent) {
                    try{
                        connect.getLog().info("ConnectSFCCP:cbInConsole:onClickListener:OK:" + payload.number);
                        var phoneContact = payload.number;
                        connect.getLog().info("ConnectSFCCP:cbInConsole:onClickListener:OK:Number:"+ phoneContact);
                        var phoneParsed = libphonenumber.parse(phoneContact, { country: { default: connectPhoneFormat.Country }});
                        connect.getLog().info("ConnectSFCCP:cbInConsole:onClickListener:OK:Parsed:"+phoneParsed.country+"|"+phoneParsed.phone);
                        var e164PhoneNumber = libphonenumber.format(phoneParsed.phone, phoneParsed.country, connectPhoneFormat.NF);
                        connect.getLog().info("ConnectSFCCP:cbInConsole:onClickListener:OK:h164Number:"+ e164PhoneNumber);
                        agent.connect(connect.Address.byPhoneNumber(e164PhoneNumber),{});
                        connect.getLog().info("ConnectSFCCP:cbInConsole:onClickListener:OK:AgentConnect");
                        sforce.opencti.setSoftphonePanelVisibility({visible: true});
                        connect.getLog().info("ConnectSFCCP:cbInConsole:onClickListener:OK:setVisible");
                        connect.getLog().info("ConnectSFCCP:cbInConsole:onClickListener:OK:GP:" + agent.getPermissions());
                    } catch (e) {
                        connect.getLog().error("ConnectSFCCP:cbInConsole:Agent:Error:").withException(e);
                    }
                })
            };

            var cbInConsole = function (response) {
                if (response.success) {
                    connect.getLog().info("ConnectSFCCP:cbInConsole:ConnectURL:"+ccSettings["/reqConnectSFCCPOptions/reqConnectURL"]);
                    //connect.getLog().info("ConnectSFCCP:cbInConsole:ConnectSSOURL:"+ccSettings["/reqConnectSFCCPOptions/reqConnectSSOURL"]);
                    connectURL = ccSettings["/reqConnectSFCCPOptions/reqConnectURL"];

                    connectSSOURL = ccSettings["/reqConnectSFCCPOptions/reqConnectSSOURL"];
                    connectSSORelay = ccSettings["/reqConnectSFCCPOptions/reqConnectSSORelay"];
                    if(connectSSOURL)
                    {
                        connectSSOURL = connectSSOURL + '?' +connectSSORelay;
                    }

                    connectMedialess = ccSettings["/reqConnectSFCCPOptions/reqConnectMedialess"]=='true'?true:false;
                    connectLoginPopup = ccSettings["/reqConnectSFCCPOptions/reqConnectLoginPopup"]=='true'?true:false;
                    connectAutoClose = ccSettings["/reqConnectSFCCPOptions/reqConnectAutoClose"]=='true'?true:false;

                    connectAutoLogin = ccSettings["/reqConnectSFCCPOptions/reqConnectAutoLogin"];
                    connectAutoLogin = parseInt(connectAutoLogin);
                    if(connectAutoLogin > 0) connectAutoLogin = connectAutoLogin * 1000;


                    connectCW = ccSettings["/reqConnectSFCCPOptions/reqConnectLW"]+"px";
                    connectCH = ccSettings["/reqConnectSFCCPOptions/reqConnectLH"]+"px";
                    connectLNCW = ccSettings["/reqConnectSFCCPOptions/reqConnectLCW"];
                    connectLNCH = ccSettings["/reqConnectSFCCPOptions/reqConnectLCH"];
                    connectPhoneFormat = JSON.parse(ccSettings["/reqConnectSFCCPOptions/reqConnectPhoneFormat"]);
                    connect.getLog().info("ConnectSFCCP:cbInConsole:JSContainer:Prefix:"+connectPhoneFormat.OPF+"|"+connectPhoneFormat.NPF+"|"
                            +connectPhoneFormat.Country+"|"+connectPhoneFormat.NF+"|"+connectPhoneFormat.TNF);

                    var testnum = libphonenumber.format(connectPhoneFormat.TNF, connectPhoneFormat.Country, connectPhoneFormat.NF);
                    connect.getLog().info("ConnectSFCCP:cbInConsoleJSContainer:TestNumber:e164Number:"+ testnum);
                    var testnum2 = testnum.replace(/([^0-9])+/g,'');
                    connect.getLog().info("ConnectSFCCP:cbInConsole:JSContainer:TestNumber:e164Numberstripped:"+ testnum2);

                    connect.getLog().info("ConnectSFCCP:cbInConsole:JSContainer");
                    var container = document.getElementById("connectcontainer");
                    container.style.width = connectCW;
                    container.style.height = connectCH;
                    connect.core.initCCP(container, {
                        ccpUrl: connectURL,
                        loginPopup: false,
                        softphone:        {
                            allowFramedSoftphone: !connectMedialess,
                        }
                    });

                    if(connectSSOURL)
                    {
                        setupLoginHandler(connectSSOURL);
                    }
                    else
                    {
                        setupLoginHandler(connectURL);
                    }

                    /* Updating isInbound to isconnected for post screen pop */
                    connect.contact(function(contact) {
                        try {
                            contact.onConnecting(function() {
                                if (contact.isConnected()) {

                                    /* This is now moved to ScreenPopManager
                                    connect.getLog().info("ConnectSFCCP:cbInConsole:onConnecting:InboundPhone:Invoked");
                                    var phoneNumber = contact.getInitialConnection().getAddress().phoneNumber;
                                    connect.getLog().info("ConnectSFCCP:cbInConsole:onConnecting:InboundPhone:PN:" + phoneNumber);
                                    var phoneParsed = libphonenumber.parse(phoneNumber, { country: { default: connectPhoneFormat.Country } });
                                    connect.getLog().info("ConnectSFCCP:cbInConsole:Classic:onConnecting:InboundPhone:Parsed:"+phoneParsed.country+"|"+phoneParsed.phone);

                                    sforce.opencti.setSoftphonePanelVisibility({visible: true});
                                    connect.getLog().info("ConnectSFCCP:cbInConsole:onConnecting:GPICall");
                                    sforce.opencti.getAppViewInfo({callback: cbGetPageInfo});
                                    connect.getLog().info("ConnectSFCCP:cbInConsole:onConnecting:ScreenPop");
                                    sforce.opencti.searchAndScreenPop({
                                       searchParams: phoneParsed.phone,
                                        queryParams: "",
                                        callType: sforce.opencti.CALL_TYPE.INBOUND,
                                        deferred: false
                                    }); */

                                    //ScreenPopManager start

                                    connect.getLog().info("ConnectSFCCP:cbInConsole:onConnecting:InboundPhone:Invoked");
                                    ctx.ACSFIntegration.ScreenpopManager.onConnecting(contact, connectPhoneFormat);

                                    //ScreenPopManager end

                                }
                            });
                        } catch (e) {
                            connect.getLog().error("ConnectSFCCP:onConnecting:Error:").withException(e);
                        }
                    });

                    connect.agent(function(agent) {
                        try {
                            onSoftphoneLoginSuccessful();
                            connect.getLog().info("ConnectSFCCP:GP:" + agent.getPermissions());
                        }
                        catch (e) {
                            connect.getLog().error("ConnectSFCCP:GP::Error:").withException(e);
                        }
                    });

                    connect.getLog().info("ConnectSFCCP:cbInConsole:CTD");
                    sforce.opencti.enableClickToDial({callback: cbClickToDial});
                    connect.getLog().info("ConnectSFCCP:cbInConsole:onClickListener:OK:settingOnClickListener");
                    sforce.opencti.onClickToDial({listener: onClickListener});
                    connect.getLog().info("ConnectSFCCP:cbInConsole:SFHW H:"+connectLNCH+ " W:"+connectLNCW+" CH:"+connectCH+" CW:"+connectCW);
                    sforce.opencti.setSoftphonePanelHeight({heightPX: parseInt(connectLNCH), callback: cbHeightSet});
                    sforce.opencti.setSoftphonePanelWidth({widthPX: parseInt(connectLNCW), callback: cbWidthSet});

                    //auto-login
                    connect.getLog().info("ConnectSFCCP:cbInConsole:connectAutoLogin=" + connectAutoLogin);
                    if(connectAutoLogin >= 1000)
                    {
                        setTimeout( function () {
                            if(connectAutoLogin >= 1000) document.getElementById('loginButton').click();
                        }, connectAutoLogin )

                    }

                }
                else {
                    connect.getLog().info("ConnectSFCCP:cbInConsole:Error");
                }

            };

            var cbGetPageInfo = function (response) {
                if (response.success) {
                    connect.getLog().info("ConnectSFCCP:cbGetPageInfo:"+ response.returnValue);
                } else {
                    connect.getLog().error("ConnectSFCCP:cbGetPageInfo:Error:"+ response.errors);
                }
            };

            var cbCCSettings = function (response) {
                if (response.success) {
                    connect.getLog().info("ConnectSFCCP:cbCCSettings:OK:" + response.success);
                    ccSettings = response.returnValue;
                    cbInConsole(response);
                }
                else {
                    connect.getLog().error("ConnectSFCCP:cbCCSettings:Error:"+ response.errors);
                }
            };

            try {
                connect.getLog().info("ConnectSFCCP:Initialization:getCCSettings");
                sforce.opencti.getCallCenterSettings({callback: cbCCSettings});
            } catch (e) {
                connect.getLog().error("ConnectSFCCP:Initialization:getCCSettings :Error:").withException(e);
            }
        })(this);
    </script>
</apex:page>